<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 13.1.2 (20250808.2320)
 -->
<!-- Pages: 1 -->
<svg width="382pt" height="395pt"
 viewBox="0.00 0.00 382.00 395.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 390.5)">
<g id="a_graph0"><a xlink:title="PEGParser class hierarchy">
<polygon fill="white" stroke="none" points="-4,4 -4,-390.5 377.62,-390.5 377.62,4 -4,4"/>
</a>
</g>
<!-- PEGParser -->
<g id="node1" class="node">
<title>PEGParser</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class PEGParser:&#10;Packrat parser for Parsing Expression Grammars (PEGs).">
<polygon fill="none" stroke="black" points="0,-70.62 0,-142.88 100,-142.88 100,-70.62 0,-70.62"/>
<text xml:space="preserve" text-anchor="start" x="18.12" y="-126.58" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="14.00" fill="#b03a2e">PEGParser</text>
<polyline fill="none" stroke="black" points="0,-116.88 100,-116.88"/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="PEGParser">
<g id="a_node1_1"><a xlink:href="#" xlink:title="parse_prefix(self, text):&#10;Return pair (cursor, forest) for longest prefix of text.&#10;To be defined in subclasses.">
<text xml:space="preserve" text-anchor="start" x="8" y="-104.38" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">parse_prefix()</text>
</a>
</g>
<g id="a_node1_2"><a xlink:href="#" xlink:title="unify_rule(self, rule, text, at)">
<text xml:space="preserve" text-anchor="start" x="8" y="-90.62" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">unify_rule()</text>
</a>
</g>
<g id="a_node1_3"><a xlink:href="#" xlink:title="unify_key(self, key, text, at=0)">
<text xml:space="preserve" text-anchor="start" x="8" y="-77.88" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">unify_key()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- Parser -->
<g id="node2" class="node">
<title>Parser</title>
<g id="a_node2"><a xlink:href="#" xlink:title="class Parser:&#10;Base class for parsing.">
<polygon fill="none" stroke="black" points="63,-250 63,-386 163,-386 163,-250 63,-250"/>
<text xml:space="preserve" text-anchor="start" x="93.5" y="-369.7" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="14.00" fill="#b03a2e">Parser</text>
<polyline fill="none" stroke="black" points="63,-360 163,-360"/>
<g id="a_node2_4"><a xlink:href="#" xlink:title="Parser">
<g id="a_node2_5"><a xlink:href="#" xlink:title="__init__(self, grammar, **kwargs):&#10;Constructor.&#10;`grammar` is the grammar to be used for parsing.&#10;Keyword arguments:&#10;`start_symbol` is the start symbol (default: &#39;&lt;start&gt;&#39;).&#10;`log` enables logging (default: False).&#10;`coalesce` defines if tokens should be coalesced (default: True).&#10;`tokens`, if set, is a set of tokens to be used.">
<text xml:space="preserve" text-anchor="start" x="71" y="-347.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node2_6"><a xlink:href="#" xlink:title="grammar(self) &#45;&gt; Grammar:&#10;Return the grammar of this parser.">
<text xml:space="preserve" text-anchor="start" x="71" y="-334.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">grammar()</text>
</a>
</g>
<g id="a_node2_7"><a xlink:href="#" xlink:title="parse(self, text: str) &#45;&gt; Iterable[DerivationTree]:&#10;Parse `text` using the grammar.&#10;Return an iterable of parse trees.">
<text xml:space="preserve" text-anchor="start" x="71" y="-322" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">parse()</text>
</a>
</g>
<g id="a_node2_8"><a xlink:href="#" xlink:title="start_symbol(self) &#45;&gt; str:&#10;Return the start symbol of this parser.">
<text xml:space="preserve" text-anchor="start" x="71" y="-309.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">start_symbol()</text>
</a>
</g>
<g id="a_node2_9"><a xlink:href="#" xlink:title="coalesce(self, children: List[DerivationTree]) &#45;&gt; List[DerivationTree]">
<text xml:space="preserve" text-anchor="start" x="71" y="-295.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">coalesce()</text>
</a>
</g>
<g id="a_node2_10"><a xlink:href="#" xlink:title="parse_on(self, text: str, start_symbol: str) &#45;&gt; Generator">
<text xml:space="preserve" text-anchor="start" x="71" y="-282.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">parse_on()</text>
</a>
</g>
<g id="a_node2_11"><a xlink:href="#" xlink:title="parse_prefix(self, text: str) &#45;&gt; Tuple[int, Iterable[DerivationTree]]:&#10;Return pair (cursor, forest) for longest prefix of text.&#10;To be defined in subclasses.">
<text xml:space="preserve" text-anchor="start" x="71" y="-271" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">parse_prefix()</text>
</a>
</g>
<g id="a_node2_12"><a xlink:href="#" xlink:title="prune_tree(self, tree)">
<text xml:space="preserve" text-anchor="start" x="71" y="-257.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">prune_tree()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- PEGParser&#45;&gt;Parser -->
<g id="edge1" class="edge">
<title>PEGParser&#45;&gt;Parser</title>
<path fill="none" stroke="black" d="M60.69,-143.25C68.54,-169.33 79.52,-205.79 89.39,-238.58"/>
<polygon fill="none" stroke="black" points="86.02,-239.53 92.25,-248.09 92.72,-237.51 86.02,-239.53"/>
</g>
<!-- EarleyParser -->
<g id="node3" class="node">
<title>EarleyParser</title>
<g id="a_node3"><a xlink:href="#" xlink:title="class EarleyParser:&#10;Earley Parser. This parser can parse any context&#45;free grammar.">
<polygon fill="none" stroke="black" points="118,-0.5 118,-213 236,-213 236,-0.5 118,-0.5"/>
<text xml:space="preserve" text-anchor="start" x="138" y="-196.7" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="14.00" fill="#b03a2e">EarleyParser</text>
<polyline fill="none" stroke="black" points="118,-187 236,-187"/>
<g id="a_node3_13"><a xlink:href="#" xlink:title="EarleyParser">
<g id="a_node3_14"><a xlink:href="#" xlink:title="__init__(self, grammar, **kwargs):&#10;Constructor.&#10;`grammar` is the grammar to be used for parsing.&#10;Keyword arguments:&#10;`start_symbol` is the start symbol (default: &#39;&lt;start&gt;&#39;).&#10;`log` enables logging (default: False).&#10;`coalesce` defines if tokens should be coalesced (default: True).&#10;`tokens`, if set, is a set of tokens to be used.">
<text xml:space="preserve" text-anchor="start" x="126" y="-174.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node3_15"><a xlink:href="#" xlink:title="chart_parse(self, words, start)">
<text xml:space="preserve" text-anchor="start" x="126" y="-160.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">chart_parse()</text>
</a>
</g>
<g id="a_node3_16"><a xlink:href="#" xlink:title="complete(self, col, state)">
<text xml:space="preserve" text-anchor="start" x="126" y="-148" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">complete()</text>
</a>
</g>
<g id="a_node3_17"><a xlink:href="#" xlink:title="earley_complete(self, col, state)">
<text xml:space="preserve" text-anchor="start" x="126" y="-135.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">earley_complete()</text>
</a>
</g>
<g id="a_node3_18"><a xlink:href="#" xlink:title="extract_a_tree(self, forest_node)">
<text xml:space="preserve" text-anchor="start" x="126" y="-122.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">extract_a_tree()</text>
</a>
</g>
<g id="a_node3_19"><a xlink:href="#" xlink:title="extract_trees(self, forest_node)">
<text xml:space="preserve" text-anchor="start" x="126" y="-109.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">extract_trees()</text>
</a>
</g>
<g id="a_node3_20"><a xlink:href="#" xlink:title="fill_chart(self, chart)">
<text xml:space="preserve" text-anchor="start" x="126" y="-97" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">fill_chart()</text>
</a>
</g>
<g id="a_node3_21"><a xlink:href="#" xlink:title="forest(self, s, kind, chart)">
<text xml:space="preserve" text-anchor="start" x="126" y="-84.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">forest()</text>
</a>
</g>
<g id="a_node3_22"><a xlink:href="#" xlink:title="parse(self, text):&#10;Parse `text` using the grammar.&#10;Return an iterable of parse trees.">
<text xml:space="preserve" text-anchor="start" x="126" y="-72.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">parse()</text>
</a>
</g>
<g id="a_node3_23"><a xlink:href="#" xlink:title="parse_forest(self, chart, state)">
<text xml:space="preserve" text-anchor="start" x="126" y="-58.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">parse_forest()</text>
</a>
</g>
<g id="a_node3_24"><a xlink:href="#" xlink:title="parse_paths(self, named_expr, chart, frm, til)">
<text xml:space="preserve" text-anchor="start" x="126" y="-46" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">parse_paths()</text>
</a>
</g>
<g id="a_node3_25"><a xlink:href="#" xlink:title="parse_prefix(self, text):&#10;Return pair (cursor, forest) for longest prefix of text.&#10;To be defined in subclasses.">
<text xml:space="preserve" text-anchor="start" x="126" y="-34.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="10.00">parse_prefix()</text>
</a>
</g>
<g id="a_node3_26"><a xlink:href="#" xlink:title="predict(self, col, sym, state)">
<text xml:space="preserve" text-anchor="start" x="126" y="-20.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">predict()</text>
</a>
</g>
<g id="a_node3_27"><a xlink:href="#" xlink:title="scan(self, col, state, letter)">
<text xml:space="preserve" text-anchor="start" x="126" y="-7.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">scan()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- EarleyParser&#45;&gt;Parser -->
<g id="edge2" class="edge">
<title>EarleyParser&#45;&gt;Parser</title>
<path fill="none" stroke="black" d="M144.72,-213.29C142.08,-221.91 139.45,-230.52 136.89,-238.88"/>
<polygon fill="none" stroke="black" points="133.6,-237.69 134.02,-248.28 140.29,-239.74 133.6,-237.69"/>
</g>
<!-- Legend -->
<g id="node4" class="node">
<title>Legend</title>
<text xml:space="preserve" text-anchor="start" x="254.38" y="-122.75" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="10.00" fill="#b03a2e">Legend</text>
<text xml:space="preserve" text-anchor="start" x="254.38" y="-112.75" font-family="Patua One, Helvetica, sans-serif" font-size="10.00">• </text>
<text xml:space="preserve" text-anchor="start" x="260.38" y="-112.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00">public_method()</text>
<text xml:space="preserve" text-anchor="start" x="254.38" y="-102.75" font-family="Patua One, Helvetica, sans-serif" font-size="10.00">• </text>
<text xml:space="preserve" text-anchor="start" x="260.38" y="-102.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00">private_method()</text>
<text xml:space="preserve" text-anchor="start" x="254.38" y="-92.75" font-family="Patua One, Helvetica, sans-serif" font-size="10.00">• </text>
<text xml:space="preserve" text-anchor="start" x="260.38" y="-92.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00">overloaded_method()</text>
<text xml:space="preserve" text-anchor="start" x="254.38" y="-83.7" font-family="Helvetica,sans-Serif" font-size="9.00">Hover over names to see doc</text>
</g>
</g>
</svg>
